return index, two pointers不能用，因为index 会打乱顺序 

# brute force 
# time o(n^2)
# space o(1)
class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        n = len(nums)
        for i in range(n):
            for j in range(i + 1, n):
                if nums[i] + nums[j] == target:
                    return [i, j]


# dictionary
# time O(n)
# space O(n)

class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        dic = {}
        for i, num in enumerate(nums):
            if target - num in dic:
                return [dic[target - num], i]
            dic[num] = i
        
        
 # two pointers
 # time O(nlgn)
 # space O(1)
 # is suitable for sorted array
 
 
