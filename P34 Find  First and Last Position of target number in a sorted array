class Solution(object):
    def searchRange(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        
        if not nums:
            return [-1, -1]
        
        left = self.find_left(nums, 0, len(nums) - 1, target)
        
        right = 0
        if left != -1:
            right = self.find_right(nums, left, len(nums) - 1, target)
        else:
            right = -1
        return [left, right]
    
    def find_left(self, nums, left, right, target):
        
        while left + 1 < right:
            mid = (left + right) // 2
            if nums[mid] == target:
                right = mid
            elif nums[mid] < target:
                left = mid + 1
            else:
                right = mid
                
        if nums[left] == target:
            return left
        if nums[right] == target:
            return right
        else:
            return -1
        
    def find_right(self, nums, left, right, target):
        while left + 1 < right:
            mid = (left + right) // 2
            if nums[mid] == target:
                left = mid
            elif nums[mid] < target:
                left = mid + 1
            else:
                right = mid
                
        if nums[right] == target:
            return right
        if nums[left] == target:
            return left
        else:
            return -1
            
