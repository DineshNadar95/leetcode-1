class Solution:
    def searchRange(self, nums, target):
        if not nums:
            return [-1, -1]
        first_index = self.binary_search_first(nums, target, 0, len(nums) - 1)
        last_index = self.binary_search_last(nums, target, 0, len(nums) - 1)
        
        return [first_index, last_index]
    
    def binary_search_first(self, nums, target, left, right):
        while left + 1 < right:
            mid = left + (right - left) // 2
            if nums[mid] == target:
                right = mid
            elif nums[mid] < target:
                left = mid
            else:
                right = mid
        if nums[left] == target:
            return left
        if nums[right] == target:
            return right
        return -1
    
    def binary_search_last(self, nums, target, left, right):
        while left + 1 < right:
            mid = left + (right - left) // 2
            if nums[mid] == target:
                left = mid
            elif nums[mid] < target:
                left = mid
            else:
                right = mid
        if nums[right] == target:
            return right
        if nums[left] == target:
            return left
        return -1
 
