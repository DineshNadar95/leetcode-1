# dp
# time O(n^2)
# space O(n)

对于每一个新来的书，他只有两个选择：

1. 如果当前层宽度允许，将这本书放在当前层
2. 如果当前层宽度不允许，只能将该书放在下一层
  所以我们只需要动态更新当前结果即可。
  求摆放前i本书需要的最小高度，首先需要求摆放前i-1书需要的最小高度
  建立数组dp[i]用来储存第i本书的最小高度，动态更新。

遍历每一本书，把当前这本书作为书架最后一层的最后一本书，
将这本书之前的书向后调整，看看是否可以减少之前的书架高度。
状态转移方程为 dp[i] = min(dp[i] , dp[j - 1] + h)，其中 j 表示最后一层所能容下书籍的索引，h 表示最后一层最大高度


dp[i], min height for first i books
