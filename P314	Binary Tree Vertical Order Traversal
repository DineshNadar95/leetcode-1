# 对于一棵树，我们设其根节点的位置为0。
# 对于任一非叶子节点，若其位置为x，设其左儿子的位置为x-1，右儿子位置为x+1。
# 按照以上规则bfs遍历整棵树统计所有节点的位置，然后按位置从小到大输出所有节点

# defaultdict means that if a key is not found in the dictionary, 
# then instead of a KeyError being thrown, a new entry is created. 
# The type of this new entry is given by the argument of defaultdict.

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
import Queue
class Solution(object):
    def verticalOrder(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        result = collections.defaultdict(list)
        queue = Queue.Queue()
        queue.put((root, 0))
        while not queue.empty():
            node, x = queue.get()
            if node:
                result[x].append(node.val)
                queue.put((node.left, x - 1))
                queue.put((node.right, x + 1))
        return [result[i] for i in sorted(result)]
