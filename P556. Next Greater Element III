# same as P31 next permutation

class Solution(object):
    def nextGreaterElement(self, n):
        
        # find first decreasing

        l = list(str(n))
        n = [int(x) for x in l]
        
        
        i = len(n) - 2
        while i >= 0 and n[i] >= n[i + 1]:
            i -= 1
        
        if i < 0:
            return -1
        self.swap(n, i)
        self.reverse(n, i)
        l = [str(x) for x in n]
        ans = int(''.join(l))
        if ans > 2 ** 31 - 1:
            return -1
        return ans
        
        
    def swap(self, nums, i):
        j = len(nums) - 1
        
        while j > i and nums[j] <= nums[i]:
            j -= 1
        
        if j > i:
            nums[j], nums[i] = nums[i], nums[j]
            
    def reverse(self, n, i):
        l = i + 1
        r = len(n) - 1
        
        while l < r:
            n[l], n[r] = n[r], n[l]
            r -= 1
            l += 1
            
        
