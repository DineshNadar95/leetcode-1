# two pointers
# time O(n)
# space O(1)

class Solution:
    def minSubArrayLen(self, s: int, nums: List[int]) -> int:
        if not nums:
            return 0
        
        fast = 0
        sum = 0
        min_length = len(nums) + 1
        for slow in range(len(nums)):
            while fast < len(nums) and sum < s:
                sum = sum + nums[fast]
                fast += 1
            if sum >= s:
                min_length = min(min_length, fast - slow)
            sum = sum - nums[slow]
            
        if min_length == len(nums) + 1:
            return 0
        return min_length
