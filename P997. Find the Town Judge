class Solution(object):
    def findJudge(self, N, trust):
        """
        :type N: int
        :type trust: List[List[int]]
        :rtype: int
        """
        dic = {i:[] for i in range(1, N + 1)}
        for t in trust:
            if t[0] in dic:
                del dic[t[0]]
            if t[1] not in dic:
                continue
            dic[t[1]].append(t[0])
        for key, value in dic.items():
            if len(value) == N - 1:
                return key
        return -1
        
        
 class Solution(object):
    def findJudge(self, N, trust):
        """
        :type N: int
        :type trust: List[List[int]]
        :rtype: int
        """
        stat = [0] * N
        for x, y in trust:
            stat[x - 1] -= 1
            stat[y - 1] += 1
        for index, value in enumerate(stat):
            if value == N - 1:
                return index + 1
        return -1
