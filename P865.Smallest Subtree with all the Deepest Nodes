# sol1:recursion, time O(n), space O(h)
# define a pair(depth, node), 如果左子树的深度 > 右子树，则最大深度叶子在左边；反之亦然。
class Solution:
    def lcaDeepestLeaves(self, root: TreeNode) -> TreeNode:
        if not root:
            return None
        return self.helper(root)[1]
        
    def helper(self, node):
        if not node:
            return 0, None
            
        left = self.helper(node.left)
        right = self.helper(node.right)
        if left[0] > right[0]:
            return left[0] + 1, left[1]
        elif left[0] < right[0]:
            return right[0] + 1, right[1]
        else:
            return left[0] + 1, node
            
            
            
 
