# we only need to iterate over the columns and assume that we add per queen a line.

# backtracking
# time O(n!)
# space O(n)

class Solution(object):
    def totalNQueens(self, n):
        
        self.res = 0
        self.dfs(n, [-1 for _ in range(n)], 0)
        return self.res 
    
    def dfs(self, n, cols, cur_q):
        if cur_q == n:
            self.res += 1
            return 
        
        for i in range(n):
            cols[cur_q] = i
            if self.valid(cols, cur_q):
                self.dfs(n, cols, cur_q + 1)
                
    def valid(self, cols, cur_q):
        for i in range(cur_q):
            if cols[i] == cols[cur_q] or abs(cur_q - i ) == abs(cols[cur_q] - cols[i]):
                return False
        return True
        
