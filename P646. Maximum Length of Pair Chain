
# greedy
# sort by second number
# greedy strategy, if current start > end, increase len by 1, else continue

# time O(nlgn)
# space O(1)


class Solution(object):
    def findLongestChain(self, pairs):
        
        if not pairs:
            return 0
        
        pairs.sort(key = lambda x : x[1])
        cur_end = pairs[0][1]
        res = 1
        cur_len = 1
        for i in range(1, len(pairs)):
            if pairs[i][0] > cur_end:
                cur_len += 1
                cur_end = pairs[i][1]
                res = max(res, cur_len)
            else:
                continue
        return res
