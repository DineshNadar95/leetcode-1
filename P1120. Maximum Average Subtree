# return maximum average
# time O(n)
# space O(h)

全局变量来更新average

For recursion
base case: 根结点返回0, 0
不是base case, recursively 解决，总问题和左右子树的关系。

class Solution:
    def maximumAverageSubtree(self, root: TreeNode) -> float:
        self.res = -sys.maxsize
        self.dfs(root) # return sum, count of cur substree
        return self.res 
    
    def dfs(self, node):
        if not node:
            return 0, 0
        
        l_s, l_c = self.dfs(node.left)
        r_s, r_c = self.dfs(node.right)
        
        self.res = max(self.res, (l_s + r_s + node.val) * 1.0 / (l_c + r_c + 1))
        return l_s + r_s + node.val, l_c + r_c + 1
    
