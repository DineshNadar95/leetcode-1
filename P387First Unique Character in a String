# time O(len(s))
# space O(len(s))
class Solution:
    def firstUniqChar(self, s: str) -> int:
        ch = []
        for i in set(s):
            if s.count(i) == 1:
                ch.append(s.index(i))
        if len(ch) > 0:
            return min(ch)
        return -1

# time O(n)
# space O(n)
class Solution(object):
    def firstUniqChar(self, s):
        """
        :type s: str
        :rtype: int
        """
        count = collections.Counter(s)
        for index, ele in enumerate(s):
            if count[ele] == 1:
                return index
        return -1
        
