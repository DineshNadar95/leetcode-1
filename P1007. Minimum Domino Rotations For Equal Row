数字要在每列都出现，泽rotation的数字要么是A[0], 要么是B[0]。

# time O(n)
# space O(1)

class Solution(object):
    def minDominoRotations(self, A, B):
        
        self.n = len(A)
        rotations = self.min_rotation(A, B, A[0]) 
        # If one could make all elements in A or B equal to A[0]
        if rotations != -1:
            return rotations 
        else:
            return self.min_rotation(A, B, B[0])


    def min_rotation(self, A, B, x):
        
        # min number of rotations to have all
        # elements equal to x in A or B
            
        rotations_a = rotations_b = 0
        for i in range(self.n):
            if A[i] != x and B[i] != x:
                return -1
            elif A[i] != x:
                rotations_a += 1
            elif B[i] != x:
                rotations_b += 1
        return min(rotations_a, rotations_b)
    
