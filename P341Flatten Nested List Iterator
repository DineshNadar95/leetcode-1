# 利用栈（Stack）数据结构对嵌套列表展开，在hasNext方法内将下一个需要访问的整数元素准备好。


class NestedIterator(object):

    def __init__(self, nestedList):
        self.stack = nestedList[::-1]

    def next(self):
        return self.stack.pop().getInteger()

    def hasNext(self):
        while self.stack:
            if self.stack[-1].isInteger():
                return True
            self.stack = self.stack[:-1] + self.stack[-1].getList()[::-1]
        return False
                
        

# Your NestedIterator object will be instantiated and called as such:
# i, v = NestedIterator(nestedList), []
# while i.hasNext(): v.append(i.next())
