# 对于要进行查找的重量，我们都去计算这个重量情况下，是不是能够在D天之内把所有的货物都拉出去。
# 然后进行简单的二分就可以了。和猴子吃香蕉的题目如出一辙。

# binary search
# left max(w), right sum(w)
# for each m, check if cur_D > D ->l = m + 1, else: r = m
# time O(n * lgsum)
# space O(1)

class Solution(object):
    def shipWithinDays(self, weights, D):
       
        l = max(weights)
        r = sum(weights)
 
        while l + 1 < r:
            m = (l + r) // 2
            if not self.can_ship(weights, m, D): 
                l = m + 1
            else:
                r = m
        if self.can_ship(weights, l, D):
            return l
        return r
    
    def can_ship(self, weights, limit, D):
        count = 1
        cur = 0
        for w in weights:
            if cur + w > limit:
                count += 1
                cur = w
            else:
                cur += w
        return count <= D
                
                
            
