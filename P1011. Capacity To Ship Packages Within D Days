# 对于要进行查找的重量，我们都去计算这个重量情况下，是不是能够在D天之内把所有的货物都拉出去。
# 然后进行简单的二分就可以了。和猴子吃香蕉的题目如出一辙。

# binary search
# left max(w), right sum(w)
# for each m, check if cur_D > D ->l = m + 1, else: r = m
# time O(n * lgsum)
# space O(1)

class Solution(object):
    def shipWithinDays(self, weights, D):
        """
        :type weights: List[int]
        :type D: int
        :rtype: int
        """
        l = max(weights)
        r = sum(weights)
        
        while l < r:
            m = (l + r) // 2
            cur = 0
            need = 1
            for w in weights:
                if cur + w > m:
                    need += 1
                    cur = 0
                cur = cur + w
            
