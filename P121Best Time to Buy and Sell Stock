# bruce-force method, time O(n^2)
class Solution(object):
    def maxProfit(self, prices):
        """
        :type prices: List[int]
        :rtype: int
        """
        max_profit = 0
        for i in range(len(prices)):
            for j in range(i + 1, len(prices)):
                cur_prof = prices[j] - prices[i]
                max_profit = max(max_profit, cur_prof)
        return max_profit
        
# time O(n), solve in one pass, iterate daily price, maintain min price and max profit so far.

class Solution(object):
    def maxProfit(self, prices):
        """
        :type prices: List[int]
        :rtype: int
        """
        if not prices:
            return 0
        max_profit = -sys.maxsize
        min_price = sys.maxsize
        
        for p in prices:
            min_price = min(p, min_price)
            max_profit = max(max_profit, p - min_price)
        return max_profit
            
            
