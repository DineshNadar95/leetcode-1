注意对比binary tree traverse and divide conquer 两种方法

class Solution:
    def maxDepth(self, root: TreeNode) -> int:
        
        # base case 
        if not root:
            return 0
        
        # if not base, recursively solve the bigger problem
        return max(self.maxDepth(root.left), self.maxDepth(root.right)) + 1
        
 # method 2, traverse
 
class Solution(object):
    def maxDepth(self, root):
        
        if not root:
            return 0
        
        return self.dfs(root)
    
    def dfs(self, node):
        if not node:
            return 0
        
        if not node.left and not node.right:
            return 1
        
        l = self.dfs(node.left)
        r = self.dfs(node.right)
        return max(l, r) + 1
