# inorder traversal (因为sorted)
# 递归 
time O(n), space O(h)

class Solution(object):
    def treeToDoublyList(self, root):
        
        if not root:
            return None
        
   
        head, tail = self.dfs(root)
        return head
    
    
    def dfs(self, node):
        
        head = node
        tail = node
        
        if node.left:
            l_h, l_t = self.dfs(node.left)
            head = l_h
            l_t.right = node
            node.left = l_t
            
        if node.right:
            r_h, r_t = self.dfs(node.right)
            tail = r_t
            r_h.left = node
            node.right = r_h
            
        head.left = tail
        tail.right = head
        return head, tail
