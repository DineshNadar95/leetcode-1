# heap
# time: O(nlgn)
# space O(n)
from heapq import * 
class Solution(object):
    def lastStoneWeight(self, stones):
        """
        :type stones: List[int]
        :rtype: int
        """
        self.heap = [-x for x in stones]
        heapify(self.heap)
        
        while self.heap and len(self.heap) >= 2:
            self.pop_two()
        
        if self.heap:
            return -self.heap[0]
        else:
            return 0
            
        
        
    def pop_two(self):
        w1 = -heappop(self.heap)
        w2 = -heappop(self.heap)
        if w1 != w2:
            w1 = w1 - w2
            heappush(self.heap, -w1)
        
        
        
            
        
            
        
