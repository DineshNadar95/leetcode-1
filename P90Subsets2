class Solution:
    def subsetsWithDup(self, nums: List[int]) -> List[List[int]]:
        result = []
        if not nums:
            return result
        nums.sort()
        self.dfs(nums, 0, [], result)
        return result
    
    def dfs(self, nums, index, cur_subset, result):
        result.append(list(cur_subset))
        for i in range(index, len(nums)):
            if i != 0 and nums[i] == nums[i - 1] and i > index:
                continue
             
            cur_subset.append(nums[i])
            self.dfs(nums, i + 1, cur_subset, result)
            #backtracking
            cur_subset.pop()
        
