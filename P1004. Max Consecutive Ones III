# 思路：
two pointers , sliding window, 
# 维护一个k>0的window
#time O(n)
# space O(1)

# sliding window实现方法, for 循环的pointer 一定不是contract的那个

class Solution(object):
    def longestOnes(self, A, K):
     
        res = 0
        i = 0
        
        for j in range(len(A)):
            if A[j] == 0:
                if K > 0:
                    K -= 1
                else:
                    while A[i] != 0:
                        i += 1     
                    # remove first 0 from i (A[i] == 0)
                    i += 1
            res = max(res, j - i + 1)
        return res
                    
                    
            
