# 思路：
two pointers , sliding window, 
# 维护一个k>0的window
#time O(n)
# space O(1)

class Solution(object):
    def longestOnes(self, A, K):
        
        i = 0
        max_len = 0
        for j, num in enumerate(A):
            if num == 0:
                if K > 0:
                    K -= 1
                else:
                    while A[i] != 0:
                        i += 1
                    i += 1
                    max_len = max(max_len, j - i + 1)
            max_len = max(max_len, j - i + 1)
        return max_len
                    
