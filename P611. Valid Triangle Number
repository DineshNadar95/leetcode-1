# brute force time O(n^3)
# 枚举a, b, c (a + b> c, a + c> b, b + c > a)


# sort then two pointers, if a > b > c, check if b + c > a
# sort O(nlgn), two pointer O(n^2)

# time O(n^2)

# sort [2,2,3,4] -> [4, 3, 2, 2]

class Solution(object):
    def triangleNumber(self, nums):
        
        nums.sort(reverse = True)
        count = 0
        
        for i in range(len(nums) - 2):
            m = i + 1
            n = len(nums) - 1
            
            while m < n:
                if nums[m] + nums[n] > nums[i]:
                    count += n - m 
                    m += 1
                else:
                    n -= 1
                    
        return count
                    
            
                
