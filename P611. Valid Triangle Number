# brute force time O(n^3)
# 枚举a, b, c (a + b> c, a + c> b, b + c > a)


# sort then two pointers, if a > b > c, check if b + c > a
# sort O(nlgn), two pointer O(n^2)

# time O(n^2)

# sort [2,2,3,4] -> [4, 3, 2, 2]

class Solution(object):
    def triangleNumber(self, nums):
        
        if not nums:
            return 0
        
        nums.sort(reverse = True)
        
        res = 0
        for index, num in enumerate(nums):
            i = index + 1
            j = len(nums) - 1
            
            while i < j:
                if nums[i] + nums[j] > num:
                    res += j - i 
                    i += 1
                else:
                    j -= 1
        return res
            
                    
