# time O(n)
# space O(1)

# calc count, tail.next = head
# k = k % count
# find node = last kth node as head
# return node

class Solution(object):
    def rotateRight(self, head, k):
        
        
        if not head:
            return None
        
        c = 0
        pre = None
        cur = head
        while cur:
            c += 1
            pre = cur
            cur = cur.next
        pre.next = head
            
            
        k = k % c 
        # last kth == fist c + 1 - k
        k2 = c + 1 - k
        cur = head
        c2 = 0
        while cur:
            c2 += 1
            if c2 == k2 - 1:
                break
            cur = cur.next
        h2 = cur.next
        cur.next = None
        return h2
        
        
                
