# time O(n)
# space O(n)

算法流程： 按顺序遍历字符串 s；
res[i] += c： 把每个字符 c 填入对应行 i
i += flag： 更新当前字符 c 对应的行索引；
flag = - flag： 在达到 Z 字形转折点时，执行反向。

class Solution(object):
    def convert(self, s, numRows):
        
        
        if numRows == 1:
            return s
        
        row = 0
        res = ['' for _ in range(numRows)]
        step = 1
        
        for char in s:
            res[row] += char
            if row == 0:
                step = 1
            elif row == numRows - 1:
                step = -1
                
            row += step
            
        return ''.join(res)
            
        
        
