# time O(n)
# space O(n)

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None



class Solution(object):
    def binaryTreePaths(self, root):
    
        if not root:
            return []
        self.res = []
        self.dfs(root, str(root.val))
        return self.res
    
    def dfs(self, node, cur_path):
        if not node.left and not node.right:
            self.res.append(cur_path)
            return 
        
        if node.left:
            self.dfs(node.left, cur_path + '->' + str(node.left.val))
        if node.right:
            self.dfs(node.right, cur_path + '->' + str(node.right.val))
        
