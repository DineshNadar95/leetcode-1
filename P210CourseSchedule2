class Solution:
    """
    @param: numCourses: a total of n courses
    @param: prerequisites: a list of prerequisite pairs
    @return: the course order
    """
    def findOrder(self, numCourses, prerequisites):
        # write your code here
        indegrees = [0] * numCourses
        neighbors = {i: [] for i in range(numCourses)}
        for i, j in prerequisites:
            neighbors[j].append(i)
            indegrees[i] += 1
            
        start_nodes = [node for node in range(numCourses) if indegrees[node] == 0]
        queue = collections.deque(start_nodes)
                
        order = []
        while queue:
            node = queue.popleft()
            order.append(node)
            
            for neighbor in neighbors[node]:
                indegrees[neighbor] -= 1
                if indegrees[neighbor] == 0:
                    queue.append(neighbor)
                    
        if len(order) == numCourses:
            return  order
        else:
            return []
