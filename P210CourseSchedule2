# BFS
# same as CourseSchedule

class Solution:
    def findOrder(self, numCourses, prerequisities):
        indegree = [0] * numCourses
        neighbors = {course : [] for course in range(numCourses)}
        
        for i, j in prerequisities:
            indegree[i] += 1
            neighbors[j].append(i)
        
        queue = []
        result = []
        for course in range(numCourses):
            if indegree[course] == 0:
                queue.append(course)
                
        while len(queue) > 0:
            course = queue.pop(0)
            result.append(course)
            for neighbor in neighbors[course]:           
                indegree[neighbor] -= 1
                if indegree[neighbor] == 0:
                    queue.append(neighbor)
                    
        if len(result) == numCourses:
            return result
        else:
            return []
                        
        
        
        
        
    
                             
                
        
        
        
        
