然后用两根指针，一根指针走得快一些遍历整个数组，另外一根指针，一直指向当前不重复部分的最后一个数。
快指针发现一个和慢指针指向的数不同的数之后，就可以把这个数丢到慢指针的后面一个位置，并把慢指针++。

class Solution:
    def removeDuplicates(self, nums: List[int]) -> int:
        if not nums:
            return 0
        
        slow = 1
        for fast in range(1, len(nums)):
            if nums[fast]  != nums[fast - 1]:
                nums[slow] = nums[fast]
                slow += 1
                
        return slow 
