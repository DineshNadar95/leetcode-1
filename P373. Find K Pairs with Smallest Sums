# time O(klgk)
# space O(k)

from heapq import * 
class Solution(object):
    def kSmallestPairs(self, nums1, nums2, k):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :type k: int
        :rtype: List[List[int]]
        """
        if not nums1 or not nums2:
            return []
        
        heap = [(nums1[0] + nums2[0], 0, 0)]
        res = []
        
        for _ in range(k):
            if not heap:
                return res
            else:
                val, i, j = heappop(heap)
                res.append([nums1[i], nums2[j]])
                if j == 0 and i + 1 < len(nums1):
                    heappush(heap, (nums1[i + 1] + nums2[j], i + 1, j))
                if j + 1 < len(nums2):
                    heappush(heap, (nums1[i] + nums2[j + 1], i, j + 1))
        return res
