# sol1: find circle and mod
# time O(2 ** n), n: length of cells (since there is a circle, we only need O(2 ** n) opes
# space O(n)

class Solution(object):
    def prisonAfterNDays(self, cells, N):
        
        cur, first_day, count = [0] * 8, None, 0
        
        while N:
            for c in range(1,7):  # left most and right most would be 0 
                if cells[c-1] == cells[c+1]:
                    cur[c] = 1
                else:
                    cur[c] = 0
                    
            if count == 0: #copy first day 
                first_day = cur[:]
            elif cur == first_day: 
                N %= count
            
            cells = cur[:]
            count += 1
            N -= 1
        return cur




