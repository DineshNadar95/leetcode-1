# sol1: find circle and mod
# time O(2 ** n), n: length of cells (since there is a circle, we only need O(2 ** n) opes
# space O(n)

class Solution(object):
    def prisonAfterNDays(self, cells, N):
        
        cur = [0] * 8
        first_day = None
        count = 0
        
        while N:
            for i in range(1, 7):
                if cells[i - 1] == cells[i + 1]:
                    cur[i] = 1
                else:
                    cur[i] = 0 
            count += 1
            N -= 1
            
            if count == 1:
                first_day = cur[:]         
            elif cur == first_day:
                N = N % (count - 1) # count - 1 is cycle
                
            cells = cur[:]

            
        return cur
            




