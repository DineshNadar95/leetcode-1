# sol1: find loop and mod
# time O(2 ** n)

class Solution(object):
    def prisonAfterNDays(self, cells, N):
        
        cur, first_day, count = [0] * 8, None, 0
        while N:
            for c in range(1,7):
                if cells[c-1] == cells[c+1]:
                    cur[c] = 1
                else:
                    cur[c] = 0
                    
            if count == 0: #copy first day 
                first_day = cur[:]
            elif cur == first_day: 
                N %= count
            
            cells = cur[:]
            count += 1
            N -= 1
        return cur




# find pattern 14 (1, 7, 14)

class Solution(object):
    def prisonAfterNDays(self, cells, N):
        """
        :type cells: List[int]
        :type N: int
        :rtype: List[int]
        """
        # the period is 14
        if N % 14 == 0:
            N = 14
            
        if N > 14:
            N = N % 14
        
        for i in range(N):
            temp = [0] * 8
            for j in range(1, 7):
                if cells[j - 1] == cells[j + 1]:
                    temp[j] = 1
                else:
                    temp[j] = 0
            cells = temp
        return cells
        
        
        
