# time O(n)
# space O(k)

class Solution(object):
    def lengthOfLongestSubstringKDistinct(self, s, k):
        
        if k == 0:
            return 0
        
        j = 0
        dic = collections.defaultdict(int)
        res = 0
        
        for i in range(len(s)):
            while j < len(s) and (len(dic.keys()) < k or s[j] in dic):
                dic[s[j]] += 1
                j += 1
        
            # s[i : j] j - 1 - i + 1
            res = max(res, j - i)
            
            if dic[s[i]] == 1:
                del dic[s[i]]
            else:
                dic[s[i]] -= 1
            
        return res
                
                
