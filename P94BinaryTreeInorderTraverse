# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def inorderTraversal(self, root: TreeNode) -> List[int]:
        results = []
        self.traverse(root, results)
        return results
    
    def traverse(self, root, results):
        if not root:
            return 
        self.traverse(root.left, results)
        results.append(root.val)
        self.traverse(root.right, results)
        
# non-recursion

class Solution(object):
    def inorderTraversal(self, root):
        if not root:
            return []
        
        stack = []
        node = root
        res = []
        
        while stack or node:
            while node:
                stack.append(node)
                node = node.left
                
            node = stack.pop()
            res.append(node.val)
            node = node.right
            
        return res
        
        
                
                
                
