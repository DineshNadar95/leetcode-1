# stack add current string when we met a '('
# pop out string from stack when we met a ')' and add to our res
# the maxmium balanced pairs we add the our res
# equal to the minimum remove to make valid parenthesis

# time O(n)
# space O(n)

class Solution(object):
    def minRemoveToMakeValid(self, s):
        """
        :type s: str
        :rtype: str
        """
        stack = []
        cur = ''
        
        for char in s:
            if char == '(':
                stack.append(cur)
                cur = ''
            elif char == ')':
                if stack:
                    cur = stack.pop() + '(' + cur + ')'
            else:
                cur += char
        
        while stack:
            cur = stack.pop() + cur
        return cur
                        
