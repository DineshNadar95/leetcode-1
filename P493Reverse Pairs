class Solution:
    def reversePairs(self, nums: List[int]) -> int:
        return self.merge_sort(nums, 0, len(nums) - 1)
    
    def merge_sort(self, nums, start, end):
        if start >= end:
            return 0
        mid = start + (end - start) // 2
        
        result = 0
        result += self.merge_sort(nums, start, mid)
        result += self.merge_sort(nums, mid + 1, end)
        result += self.merge(nums, start, mid, end)
        return result
    
    def merge(self, nums, start, mid, end):
        count = 0
        i = start
        j = mid + 1
        while (i <= mid and j <= end):
            if nums[i] > 2 * nums[j]:
                count += mid -i + 1
                j += 1
            else:
                i += 1
            
        nums[start:end + 1] = sorted(nums[start:end + 1])
        return count 
