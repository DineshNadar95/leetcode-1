# brute force 
# time O(n)
# space O(n)
class Solution(object):

    def __init__(self, nums):
        """
        :type nums: List[int]
        """
        self.nums = nums
        

    def pick(self, target):
        """
        :type target: int
        :rtype: int
        """
        idx = []
        for i, ele in enumerate(self.nums):
            if ele == target:
                idx.append(i)
                
        return idx[random.randint(0, len(idx) - 1)]
        


# 水塘抽样
# time O(n)
# space O(1)

class Solution(object):

    def __init__(self, nums):
        """
        :type nums: List[int]
        """
        self.nums = nums
            
            # 1,2,3,3,3
            # count  1        2 .    3
            # chance (1, 1)  (1, 2) . (1, 2, 3)
            # res 1 .   1 .   1/2    1/3
            #     1/3 .    1/2 * 2/3 . 1/3
    def pick(self, target):
        """
        :type target: int
        :rtype: int
        """
        res = None
        count = 0
        for i, num in enumerate(self.nums):
            if num == target:
                count += 1
                chance = random.randint(1, count)
                if chance == count:
                    res = i
        return res
