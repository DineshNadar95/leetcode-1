# subproblem
# dp[i], min cuts for s[:i]
# transmation formula: dp[i] = min(dp[j] + 1), if valid(j + 1, i) for 0 <= j < i

# valid[i][j] = s[i] == s[j] and valid[i + 1][j - 1]

# time O(n^2)
# space O(n^2)

class Solution(object):
    def minCut(self, s):
        dp=[0 for i in range(len(s)+1)]
        p=[[False for i in range(len(s))] for j in range(len(s))]
        
        for i in range(len(s)+1):
            dp[i]=len(s)-i
            
        for i in reversed(range(len(s))):
            for j in range(i,len(s)):
                if s[i]==s[j] and (j-i<2 or p[i+1][j-1]==True):
                    p[i][j]=True
                    dp[i]=min(dp[i],dp[j+1]+1)
        return dp[0]-1

     
                
