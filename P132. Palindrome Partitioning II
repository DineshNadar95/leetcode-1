# subproblem
# dp[i], min cuts for s[:i]
# transmation formula: dp[i] = min(dp[i], dp[j + 1] + 1), if valid(j + 1, i) for 0 <= j < i

# time O(n^2)
# space O(n)

class Solution(object):
    def minCut(self, s):
        lens = len(s)
        isPal = [[False] * (i + 1) for i in range(lens)]
        dp = range(lens) + [-1]
        
        for i in range(lens):
            for j in range(i, -1, -1):
                if s[i] == s[j] and (i - j < 2 or isPal[i - 1][j + 1]):
                    isPal[i][j] = True
                    dp[i] = min(dp[i], dp[j - 1] + 1)
        return dp[lens - 1]

     
                
                
                
