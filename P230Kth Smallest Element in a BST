# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def kthSmallest(self, root: TreeNode, k: int) -> int:
        count = []
        self.helper(root, count)
        return count[k - 1]
    
    def helper(self, root, count):
        if not root:
            return None
        self.helper(root.left, count)
        count.append(root.val)
        self.helper(root.right, count)

## 非递归实现中序遍历，防止stack overflow
## follow up
add a count variable to each of the tree node which is used to represent the num of nodes in its left subtree
and then use quick sort to find k-th smallest element
