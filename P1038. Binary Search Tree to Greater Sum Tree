# recurions
# time O(n)
# space O(h)

# dfs traversal
# start from the right most node, then current node, then left subtree

class Solution(object):
    def bstToGst(self, root):
        
        if not root:
            return None
            
        self.cur_sum = 0
        self.dfs(root)
        return root
    
    def dfs(self, node):
        if node.right:
            self.dfs(node.right)
            
        self.cur_sum += node.val
        node.val = self.cur_sum
        
        if node.left:
            self.dfs(node.left)
        
