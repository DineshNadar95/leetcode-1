# time O(n!)
# space O(n!)

class Solution(object):
    def permute(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        if not nums:
            return []
        
        res = []
        self.dfs(nums, res, [])
        return res
        
    
    def dfs(self, nums, res, path):
        if not nums:
            res.append(path)
            return 
        for i in range(len(nums)):
            self.dfs(nums[:i] + nums[i + 1:], res, path + [nums[i]])
        
