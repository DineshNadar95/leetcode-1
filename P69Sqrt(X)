# binar search
# time O(lg(x/精度))
# space O(1)

class Solution(object):
    def mySqrt(self, x):
        """
        :type x: int
        :rtype: int
        """
        if x == 0:
            return 0
        
        left = 0
        right = x
        while left + 1 < right:
            mid = left + (right - left) // 2
            if mid == x // mid:
                return mid
            elif mid < x // mid:
                left = mid
            else:
                right = mid
                
        if right <= x // right:
            return right
        return left
        
        
        
 # follow up 一直二分直到 |number^2 - x| <= 1e-10
 class Solution:
    
    """
    @param x: a double
    @return: the square root of x
    """
    def sqrt(self, x):
        
        if x >= 1:
            start, end = 1, x
        else:
            start, end = x, 1
        
        while end - start > 1e-10:
            mid = (start + end) / 2
            if mid * mid < x:
                start = mid
            else:
                end = mid
                
        return start
        
