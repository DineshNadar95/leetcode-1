# dfs
# time O(n)
# space O(h)

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def hasPathSum(self, root, sum):
        
        if not root:
            return False
        
        return self.dfs(root, 0, sum)
    
    
    def dfs(self, node, cur_s, target):
        if not node.left and not node.right:
            cur_s += node.val
            if cur_s == target:
                return True
            return
            
        if node.left:
            if self.dfs(node.left, cur_s + node.val, target):
                return True
        
        if node.right:
            if self.dfs(node.right, cur_s + node.val, target):
                return True
        return False
        
