# dfs
# time O(n)
# space O(h)

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def hasPathSum(self, root, sum):
        """
        :type root: TreeNode
        :type sum: int
        :rtype: bool
        """
        if not root:
            return False
            
        self.res = False
        self.dfs(root, root.val, sum)
        return self.res
         
    
    
    def dfs(self, node, cur_sum, sum):
        if not node.left and not node.right:
            if cur_sum == sum:
                self.res = True
            return 
                
        if node.left:
            self.dfs(node.left, cur_sum + node.left.val, sum)
        if node.right:
            self.dfs(node.right, cur_sum + node.right.val, sum)
        
