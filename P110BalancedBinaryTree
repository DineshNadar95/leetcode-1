# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def isBalanced(self, root: TreeNode) -> bool:
        if root is None:
            return True
        return self.tree_depth(root) != -1
    
    def tree_depth(self, root):
        if root is None:
            return 0
        left_depth = self.tree_depth(root.left)
        right_depth = self.tree_depth(root.right)
        if left_depth == -1 or right_depth == -1 or abs(left_depth - right_depth) > 1:
            return -1 
        return max(left_depth, right_depth) + 1
