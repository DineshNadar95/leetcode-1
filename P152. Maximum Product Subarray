# dp
keep track of min_prod, max_prod for current element
update cur_max = max(pre_min * cur, pre_max * cur, cur)
res = max(res, cur_max)

时间复杂度是O(N)，空间复杂度是O(1). N是数组大小。

class Solution(object):
    def maxProduct(self, nums):
        
        if not nums:
            return 0
            
        n = len(nums)
        min_cur = max_cur = res = nums[0]
        for i in range(1, n):
            pre_min = min_cur
            pre_max= max_cur
            min_cur = min(pre_min * nums[i], pre_max * nums[i], nums[i])
            max_cur = max(pre_min * nums[i], pre_max * nums[i], nums[i])
            res = max(res, max_cur)
        return res
        
