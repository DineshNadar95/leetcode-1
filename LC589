589. Connecting Graph
Given n nodes in a graph labeled from 1 to n. There is no edges in the graph at beginning.

You need to support the following method:

connect(a, b), add an edge to connect node a and node b`.
query(a, b), check if two nodes are connected

注意：
联通a和b: 先要找到a和b的老大哥节点，再联通
判断a.b是否联通：老大哥节点是否相同
找老大哥节点：先找路径，中间要进行路径压缩

class ConnectingGraph:
    """
    @param: n: An integer
    """
    def __init__(self, n):
        # do intialization if necessary
        self.father = {}
        for i in range(1, n + 1):
            self.father[i] = i

    def connect(self, a, b):
        self.father[self.find(a)] = self.father[self.find(b)]

    def query(self, a, b):
        return self.find(a) == self.find(b)
        
    def find(self, node):
        path = []
        while self.father[node] != node:
            node = self.father[node]
            path.append(node)
        for n in path:
            self.father[n] = node
        return node
            


