# bfs with prune
# constraint x y in first quardtic area
# 1. target x = abs(x), target y = abs(y)
# 2. any new point x, y should be >= -2

class Solution(object):
    def minKnightMoves(self, x, y):
        
        a = abs(x)
        b = abs(y)
        dirs = [(-2, 1), (2, 1), (-2, -1), (2, -1), (1, 2), (1, -2), (-1, 2), (-1, -2)]
        
        queue = collections.deque([(0, 0, 0)])
        visited = set()
        visited.add((0, 0))
        
        while queue:
            x, y, step = queue.popleft()
            if x == a and y == b:
                return step
            for dx, dy in dirs:
                new_x = x + dx
                new_y = y + dy
                new_step = step + 1
                if (new_x, new_y) not in visited:
                    queue.append((new_x, new_y, new_step))
                    visited.add((new_x, new_y))
            
        
