思路】

path = "/a/./b/../../c/", =>"/c"

整个过程：

l  “/”根目录

l  “a”进入子目录a，目前处于“/a”

l  “.”当前目录，不操作仍处于“/a”

l  “/b”进入子目录b，目前处于“/a/b”

l  “..”返回上级目录，处于“/a”

l  “..”返回上级目录，处于根目录“/”

l  “c”进入子目录c，目前处于“/c”

 

利用栈解决问题：

把非'/'和'.'push进栈，如果遇到'..'出栈pop，否则压栈push。最后还原成路径格式。
# time O(n)
# space O(n)

class Solution:
    def simplifyPath(self, path: str) -> str:
        directories = path.split('/')
        stack = []
        for dire in directories:
            if not dire or dire == '.':
                continue
            elif dire == '..':
                if stack:
                    stack.pop()
            else:
                stack.append(dire)
           
        return '/' + ('/').join(stack)
            
        
        
