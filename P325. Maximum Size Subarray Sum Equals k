# hash
# time O(n)
# space o(n)

可以用hash表来保存前n个数的和,然后每次去查是否当前和与目标值之差已经存在, 
是的话说明我们找到了一个序列,然后更新最大长度大小. 
哦, 还有就是如果有相同的和, 那就不管了, 因为我们要的最长的子串, 肯定是留着前面的一个值更优.

class Solution(object):
    def maxSubArrayLen(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: int
        """
        # dic key: prefix sum 保存前i个数的和, value: , index
        dic = {0:-1}
        summ = 0
        maxlen = 0
        for i in range(len(nums)):
            summ += nums[i]
            if summ - k in dic and i-dic[summ-k] > maxlen:
                maxlen = i-dic[summ-k]
            if summ not in dic:
                dic[summ] = i
        return maxlen
