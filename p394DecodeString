# sol1 recursion


# sol2 stack
# 这个题，遇到’[‘就把之前的字符串进行进栈操作。遇到’]'进行出栈操作。
# curstring保存的是出栈操作完成后的字符串。
# 注意这一步：curstring = prestring + prenum * curstring，
# prestring是前面的字符串，prenum * curstring是这一步骤结束之后的字符串，所以是前面的字符串+现在的字符串得到目前已有的字符串。
# time O(k_max * n) (O(n))?? (n is the length of input, linear time)
# space O(k_max * n) O(max depth of stack)
class Solution(object):
    def decodeString(self, s):
        stack = []
        cur_s = ''
        cur_n = 0
        for char in s:
            if char == '[':
                stack.append(cur_s)
                stack.append(cur_n)
                cur_s = ''
                cur_n = 0
            elif char == ']':
                pre_n = stack.pop()
                pre_s = stack.pop()
                cur_s = pre_s + cur_s * pre_n
            elif char.isdigit():
                cur_n = cur_n * 10 + int(char)
            else:
                cur_s = cur_s + char
                
        return cur_s
