## sort + two pointers
# time O(n^2)
# space O(1)

class Solution:
    def threeSumClosest(self, nums: List[int], target: int) -> int:
        nums.sort()
        ans = None
        for i in range(0, len(nums)):
            left, right = i + 1, len(nums) - 1 
            while left < right:
                sum_ = nums[i] + nums[left] + nums[right]
                if ans is None or abs(sum_ - target) < abs(ans - target):
                    ans = sum_
                elif sum_ <= target:
                    left += 1
                else:
                    right -= 1
        return ans
