# two hashtbale
# time O(1)
# space O(n)

class UndergroundSystem(object):

    def __init__(self):
        self.person_start = {} # dic, id(people) : (start_sta, t)
        self.s_e = {}          # dic, (s, e) : (time, people)

    def checkIn(self, id, stationName, t): 
        self.person_start[id] = (stationName, t)

    def checkOut(self, id, stationName, t):  
        
        start, t1 = self.person_start.get(id)
        pre_t, pre_p = self.s_e.get((start, stationName), [0, 0])
        self.s_e[(start, stationName)] = [pre_t + (t - t1), pre_p + 1]
        

    def getAverageTime(self, startStation, endStation): 
        
        t, p = self.s_e.get((startStation, endStation))
        return t * 1.0 / p
        
