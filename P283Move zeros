维持两个指针，慢的指针始终指向上一个非零数的后面(第一个0），快指针向后扫描直至找到一个非零数，
将快指针找到的非零数赋值给慢指针的位置后将慢指针后移一个位置，同时将快指针所在处的数置为0。循环下去即可。
# time O(n) inplace
# write time o(n) n: num of no-zeros
class Solution(object):
    def moveZeroes(self, nums):
        
        i = 0
        j = 0
        while i < len(nums) and j < len(nums):
            if nums[j] != 0:
                nums[i], nums[j] = nums[j], nums[i]
                i += 1
                j += 1
            else:
                j += 1
                
                
class Solution(object):
    def moveZeroes(self, nums):
  
        slow = 0
        fast = 0
        for fast in range(len(nums)):
            if nums[fast] != 0:
                nums[slow], nums[fast] = nums[fast], nums[slow]
                slow += 1
        return nums
    
            
# in place把零项都移到左边，
"""
class Solution(object):
    def moveZeroes(self, nums):
        """
        :type nums: List[int]
        :rtype: None Do not return anything, modify nums in-place instead.
        """
        slow = 0
        fast = 0
        while fast < len(nums):
            if nums[fast] == 0:
                nums[fast], nums[slow] = nums[slow], nums[fast]
                slow += 1
            fast += 1
        return slow, nums
        
# follow up : minimize the over write
in place把非零项都移到左边，
两个pointer， 左边找第一个0， 右边找第一个非0， 两边推进

有一点点不同就是要minimize write operations 所以把swap 换成直接将前面的零值赋成后面的非零值，
而不同再将后面的非零值置零了，因为我们不care之后的那个零值，所以这样就减少了一半的write operation.


# Move all the non-zero elements to the beginning
# 写入次数：  write数是min(0的个数，非0个数)
    def two_pointers(self, nums):
        left = 0
        right = len(nums) - 1
        count = 0
        while left < right:
            while left < right and nums[left] != 0:
                left += 1
            while left < right and nums[right] == 0:
                right -= 1
            
            if left < right:
                nums[left], nums[right] = nums[right], nums[left]
                count += 1
                left += 1
                right -= 1
        return nums, count

# follow up: 如果数组全是0或者全是非0怎么办



            
