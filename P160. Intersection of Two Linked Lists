# 我们让两条链表分别从各自的开头开始往后遍历，当其中一条遍历到末尾时，
# 我们跳到另一个条链表的开头继续遍历。
# 两个指针会在interaction处相遇

# time O(m + n)
# space O(1)


class Solution(object):
    def getIntersectionNode(self, headA, headB):
        
        if not headA and not headB:
            return None
        
        p1 = headA
        p2 = headB
        
        while p1 != p2:
            if p1:
                p1 = p1.next
            else:
                p1 = headB
            
            if p2:
                p2 = p2.next
            else:
                p2 = headA
                
        return p1
            
            
